{% import "activity/includes/macros" as macros %}

{% macro neoBlock(field, block, key) %}
    <ul>
        {% for handle, mfield in block.fields ?? [] %}
            {{ macros.elementField(mfield, {fieldId: field.id, key: key ~ '.fields.' ~ handle ~ '.data' }) }}
        {% endfor %}
        {% if block.children ?? [] %}
            <li>{{ 'Children blocks changes:'|t('activity') }}</li>
            <ul>
                {{ _self.neoBlocks(block.children, field, key ~ '.children') }}
            </ul>
        {% endif %}
    </ul>
{% endmacro %}

{% macro neoBlocks(blocks, field, key = '') %}
    {% for row, block in blocks %}
        {% set key = key ~ '.' ~ row %}
        {% set label = (craft.activity.version == 'dev-master' or craft.activity.versionCompare('2.3.15', '>=')) ? block.order : (row + 1) %}
        {% if block.mode == 'changed' %}
            <li>{{ 'Block {row} was changed'|t('activity', {row: label}) }}</li>
            {{ _self.neoBlock(field, block, key) }}
        {% elseif block.mode == 'removed' %}
            <li>{{ 'Block {row} was removed'|t('activity', {row: label}) }}</li>
            {{ _self.neoBlock(field, block, key) }}
        {% else %}
            <li>{{ 'Block {row} was added'|t('activity', {row: label}) }}</li>
            {{ _self.neoBlock(field, block, key) }}
        {% endif %}
    {% endfor %}
{% endmacro %}

<li>
    {% if field.data.blocks %}
        {{ 'Field {field} was changed'|t('activity', {
            field: field.data.name
        }) }}
        <ul>
            {{ _self.neoBlocks(field.data.blocks, field, 'blocks') }}
        </ul>
    {% else %}
        {{ 'Field {field} was set to {value}'|t('activity', {
            field: field.data.name,
            value: '<code>null</code>'
        })|raw }}
    {% endif %}
</li>