{% macro fromValue(field) %}
    <code>{{ (field.hasFancyFrom ? field.fancyFrom : field.from)|prettyPrint }}</code>
{% endmacro %}

{% macro toValue(field) %}
    <code>{{ (field.hasFancyTo ? field.fancyTo : field.to)|prettyPrint }}</code>
{% endmacro %}

{% macro label(name, log) %}
    {% set label = log.getSettingLabel(name) %}
    {% if label %}
        {{ label }}
    {% else %}
        <code>{{ name }}</code>
    {% endif %}
{% endmacro %}

{% macro setting(field, log) %}
    <li>
        {% if field.hasFrom and field.hasTo %}
            {{ "{setting} was changed from {from} to {to}"|t('activity', {
                setting: _self.label(field.name, log),
                from: _self.fromValue(field),
                to: _self.toValue(field)
            })|raw }}
        {% elseif field.hasTo %}
            {{ "{setting} was set to {to}"|t('activity', {
                setting: _self.label(field.name, log),
                to: _self.toValue(field)
            })|raw }}
        {% elseif field.hasFrom %}
            {{ "{setting} value ({from}) was removed"|t('activity', {
                setting: _self.label(field.name, log),
                from: _self.fromValue(field)
            })|raw }}
        {% else %}
            {{ "{setting} was changed"|t('activity', {
                setting: _self.label(field.name, log)
            })|raw }}
        {% endif %}
    </li>
{% endmacro %}

{% if log.changedFields %}
    <ul>
        {% for name, field in log.changedFields %}
            {{ _self.setting(field, log) }}
        {% endfor %}
    </ul>
{% endif %}